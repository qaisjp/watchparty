{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import{Icon,Divider,Radio,Message,Input,Button,Label}from'semantic-ui-react';// import { SignInButton } from '../TopBar/TopBar';\nimport{getCurrentSettings,updateSettings}from'./LocalSettings';import axios from'axios';import{serverPath}from'../../utils';import{PermanentRoomModal}from'../Modal/PermanentRoomModal';export var SettingsTab=function SettingsTab(_ref){var hide=_ref.hide,user=_ref.user,roomLock=_ref.roomLock,setRoomLock=_ref.setRoomLock,socket=_ref.socket,isSubscriber=_ref.isSubscriber,roomId=_ref.roomId,setChatDisabled=_ref.setChatDisabled;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),updateTS=_useState2[0],setUpdateTS=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),permModalOpen=_useState4[0],setPermModalOpen=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),vanity=_useState6[0],setVanity=_useState6[1];var _useState7=useState(undefined),_useState8=_slicedToArray(_useState7,2),password=_useState8[0],setPassword=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isChatDisabled=_useState10[0],setIsChatDisabled=_useState10[1];var _useState11=useState(undefined),_useState12=_slicedToArray(_useState11,2),owner=_useState12[0],setOwner=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),validVanity=_useState14[0],setValidVanity=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),validVanityLoading=_useState16[0],setValidVanityLoading=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),roomLink=_useState18[0],setRoomLink=_useState18[1];useEffect(function(){var getRoomLink=function getRoomLink(vanity){if(vanity){return\"\".concat(window.location.origin,\"/r/\").concat(vanity);}return\"\".concat(window.location.origin).concat(roomId.replace('/','#'));};if(socket){socket.emit('CMD:getRoomState');var handleRoomState=function handleRoomState(data){setOwner(data.owner);setVanity(data.vanity);setPassword(data.password);setRoomLink(getRoomLink(data.vanity));setIsChatDisabled(data.isChatDisabled);window.history.replaceState('','',getRoomLink(data.vanity));setChatDisabled(data.isChatDisabled);};socket.on('REC:getRoomState',handleRoomState);return function cleanup(){socket.off('REC:getRoomState',handleRoomState);};}},[socket,roomId,setChatDisabled]);var setRoomState=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return user===null||user===void 0?void 0:user.getIdToken();case 2:token=_context.sent;socket.emit('CMD:setRoomState',_objectSpread({uid:user===null||user===void 0?void 0:user.uid,token:token},data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),[socket,user]);var setRoomOwner=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var token;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return user===null||user===void 0?void 0:user.getIdToken();case 2:token=_context2.sent;socket.emit('CMD:setRoomOwner',_objectSpread({uid:user===null||user===void 0?void 0:user.uid,token:token},data));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref3.apply(this,arguments);};}(),[socket,user]);var checkValidVanity=useCallback(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(input){var response,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(input){_context3.next=3;break;}setValidVanity(true);return _context3.abrupt(\"return\");case 3:setValidVanityLoading(true);_context3.next=6;return axios.get(serverPath+'/resolveRoom/'+input);case 6:response=_context3.sent;data=response.data;setValidVanityLoading(false);// console.log(data.vanity, vanity);\nif(data&&data.vanity&&data.vanity!==vanity){// Already exists and doesn't match current room\nsetValidVanity(false);}else{setValidVanity(true);}case 10:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref4.apply(this,arguments);};}(),[setValidVanity,vanity]);var lockDisabled=!Boolean(user)||Boolean(roomLock&&roomLock!==(user===null||user===void 0?void 0:user.uid));var permanentDisabled=!Boolean(user)||Boolean(owner&&owner!==(user===null||user===void 0?void 0:user.uid));return/*#__PURE__*/_jsxs(\"div\",{style:{display:hide?'none':'block',color:'white'},children:[permModalOpen&&/*#__PURE__*/_jsx(PermanentRoomModal,{closeModal:function closeModal(){return setPermModalOpen(false);}}),/*#__PURE__*/_jsx(\"div\",{className:\"sectionHeader\",children:\"Room Settings\"}),!user&&/*#__PURE__*/_jsx(Message,{color:\"yellow\",size:\"tiny\",children:\"You need to be signed in to change these settings.\"}),/*#__PURE__*/_jsx(SettingRow,{icon:roomLock?'lock':'lock open',name:\"Lock Room\",description:\"Only the person who locked the room can control the video.\",checked:Boolean(roomLock),disabled:lockDisabled,onChange:function onChange(_e,data){return setRoomLock(data.checked);}}),/*#__PURE__*/_jsx(SettingRow,{icon:'clock',name:\"Make Room Permanent\",description:'Prevent this room from expiring. This also unlocks additional room features.',helpIcon:/*#__PURE__*/_jsx(Icon,{name:\"help circle\",onClick:function onClick(){return setPermModalOpen(true);},style:{cursor:'pointer'}}),checked:Boolean(owner),disabled:permanentDisabled,onChange:function onChange(_e,data){return setRoomOwner({undo:!data.checked});}}),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/_jsx(\"div\",{className:\"sectionHeader\",children:\"Admin Settings\"}),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/_jsx(SettingRow,{icon:'key',name:\"Set Room Password\",description:\"Users must know this password in order to join the room.\",content:/*#__PURE__*/_jsx(Input,{value:password,onChange:function onChange(e){return setPassword(e.target.value);},fluid:true}),disabled:false}),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/_jsx(SettingRow,{icon:'i cursor',name:\"Disable Chat\",description:\"Prevent users from sending messages in chat.\",checked:Boolean(isChatDisabled),disabled:false,onChange:function onChange(_e,data){return setIsChatDisabled(Boolean(data.checked));}}),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/_jsx(SettingRow,{icon:'linkify',name:\"Set Custom Room URL\",description:\"Set a custom URL for this room. Inappropriate names may be revoked.\",checked:Boolean(roomLock),disabled:!isSubscriber,subOnly:true,content:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Input,{value:vanity,disabled:!isSubscriber,onChange:function onChange(e){checkValidVanity(e.target.value);setVanity(e.target.value);},label:/*#__PURE__*/_jsx(Label,{children:\"\".concat(window.location.origin,\"/r/\")}),loading:validVanityLoading,fluid:true,size:\"mini\",icon:true,action:validVanity?/*#__PURE__*/_jsx(Icon,{name:\"checkmark\",color:\"green\"}):/*#__PURE__*/_jsx(Icon,{name:\"close\",color:\"red\"})}),/*#__PURE__*/_jsxs(Button,{size:\"mini\",fluid:true,icon:true,labelPosition:\"left\",color:\"orange\",title:\"Copy link to clipboard\",onClick:function onClick(){navigator.clipboard.writeText(roomLink);},children:[/*#__PURE__*/_jsx(Icon,{name:\"copy\"}),roomLink]}),/*#__PURE__*/_jsx(\"p\",{})]})}),/*#__PURE__*/_jsx(\"p\",{}),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/_jsxs(Button,{primary:true,disabled:!validVanity,labelPosition:\"left\",icon:true,fluid:true,onClick:function onClick(){return setRoomState({vanity:vanity,password:password,isChatDisabled:isChatDisabled});},children:[/*#__PURE__*/_jsx(Icon,{name:\"save\"}),\"Save Admin Settings\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"sectionHeader\",children:\"Local Settings\"}),/*#__PURE__*/_jsx(SettingRow,{updateTS:updateTS,icon:\"bell\",name:\"Disable chat notification sound\",description:\"Don't play a sound when a chat message is sent while you're on another tab\",checked:Boolean(getCurrentSettings().disableChatSound),disabled:false,onChange:function onChange(_e,data){updateSettings(JSON.stringify(_objectSpread(_objectSpread({},getCurrentSettings()),{},{disableChatSound:data.checked})));setUpdateTS(Number(new Date()));}})]});};var SettingRow=function SettingRow(_ref5){var icon=_ref5.icon,name=_ref5.name,description=_ref5.description,checked=_ref5.checked,disabled=_ref5.disabled,onChange=_ref5.onChange,content=_ref5.content,subOnly=_ref5.subOnly,helpIcon=_ref5.helpIcon;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Divider,{inverted:true,horizontal:true}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(Icon,{size:\"large\",name:icon}),/*#__PURE__*/_jsxs(\"div\",{children:[name,\" \",helpIcon,subOnly?/*#__PURE__*/_jsx(Label,{size:\"mini\",color:\"orange\",children:\"Subscriber only\"}):null]}),!content&&/*#__PURE__*/_jsx(Radio,{style:{marginLeft:'auto'},toggle:true,checked:checked,disabled:disabled,onChange:onChange})]}),/*#__PURE__*/_jsx(\"div\",{className:\"smallText\",children:description}),content]})]});};","map":{"version":3,"sources":["/home/runner/work/watchparty/watchparty/src/components/Settings/SettingsTab.tsx"],"names":["React","useState","useEffect","useCallback","Icon","Divider","Radio","Message","Input","Button","Label","getCurrentSettings","updateSettings","axios","serverPath","PermanentRoomModal","SettingsTab","hide","user","roomLock","setRoomLock","socket","isSubscriber","roomId","setChatDisabled","updateTS","setUpdateTS","permModalOpen","setPermModalOpen","undefined","vanity","setVanity","password","setPassword","isChatDisabled","setIsChatDisabled","owner","setOwner","validVanity","setValidVanity","validVanityLoading","setValidVanityLoading","roomLink","setRoomLink","getRoomLink","window","location","origin","replace","emit","handleRoomState","data","history","replaceState","on","cleanup","off","setRoomState","getIdToken","token","uid","setRoomOwner","checkValidVanity","input","get","response","lockDisabled","Boolean","permanentDisabled","display","color","_e","checked","cursor","undo","e","target","value","navigator","clipboard","writeText","disableChatSound","JSON","stringify","Number","Date","SettingRow","icon","name","description","disabled","onChange","content","subOnly","helpIcon","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Icon,\n  Divider,\n  Radio,\n  CheckboxProps,\n  Message,\n  Input,\n  Button,\n  Label,\n} from 'semantic-ui-react';\n// import { SignInButton } from '../TopBar/TopBar';\nimport { getCurrentSettings, updateSettings } from './LocalSettings';\nimport axios from 'axios';\nimport { serverPath } from '../../utils';\nimport { PermanentRoomModal } from '../Modal/PermanentRoomModal';\n\ninterface SettingsTabProps {\n  hide: boolean;\n  user: firebase.User | undefined;\n  roomLock: string;\n  setRoomLock: Function;\n  socket: SocketIOClient.Socket;\n  isSubscriber: boolean;\n  roomId: string;\n  setChatDisabled: (val: boolean) => void;\n}\n\nexport const SettingsTab = ({\n  hide,\n  user,\n  roomLock,\n  setRoomLock,\n  socket,\n  isSubscriber,\n  roomId,\n  setChatDisabled,\n}: SettingsTabProps) => {\n  const [updateTS, setUpdateTS] = useState(0);\n  const [permModalOpen, setPermModalOpen] = useState(false);\n  const [vanity, setVanity] = useState<string | undefined>(undefined);\n  const [password, setPassword] = useState<string | undefined>(undefined);\n  const [isChatDisabled, setIsChatDisabled] = useState(false);\n  const [owner, setOwner] = useState<string | undefined>(undefined);\n  const [validVanity, setValidVanity] = useState(true);\n  const [validVanityLoading, setValidVanityLoading] = useState(false);\n  const [roomLink, setRoomLink] = useState<string>('');\n  useEffect(() => {\n    const getRoomLink = (vanity: string) => {\n      if (vanity) {\n        return `${window.location.origin}/r/${vanity}`;\n      }\n      return `${window.location.origin}${roomId.replace('/', '#')}`;\n    };\n    if (socket) {\n      socket.emit('CMD:getRoomState');\n      const handleRoomState = (data: any) => {\n        setOwner(data.owner);\n        setVanity(data.vanity);\n        setPassword(data.password);\n        setRoomLink(getRoomLink(data.vanity));\n        setIsChatDisabled(data.isChatDisabled);\n        window.history.replaceState('', '', getRoomLink(data.vanity));\n        setChatDisabled(data.isChatDisabled);\n      };\n      socket.on('REC:getRoomState', handleRoomState);\n      return function cleanup() {\n        socket.off('REC:getRoomState', handleRoomState);\n      };\n    }\n  }, [socket, roomId, setChatDisabled]);\n  const setRoomState = useCallback(\n    async (data: any) => {\n      const token = await user?.getIdToken();\n      socket.emit('CMD:setRoomState', {\n        uid: user?.uid,\n        token,\n        ...data,\n      });\n    },\n    [socket, user]\n  );\n  const setRoomOwner = useCallback(\n    async (data: any) => {\n      const token = await user?.getIdToken();\n      socket.emit('CMD:setRoomOwner', {\n        uid: user?.uid,\n        token,\n        ...data,\n      });\n    },\n    [socket, user]\n  );\n  const checkValidVanity = useCallback(\n    async (input: string) => {\n      if (!input) {\n        setValidVanity(true);\n        return;\n      }\n      setValidVanityLoading(true);\n      const response = await axios.get(serverPath + '/resolveRoom/' + input);\n      const data = response.data;\n      setValidVanityLoading(false);\n      // console.log(data.vanity, vanity);\n      if (data && data.vanity && data.vanity !== vanity) {\n        // Already exists and doesn't match current room\n        setValidVanity(false);\n      } else {\n        setValidVanity(true);\n      }\n    },\n    [setValidVanity, vanity]\n  );\n  const lockDisabled =\n    !Boolean(user) || Boolean(roomLock && roomLock !== user?.uid);\n  const permanentDisabled =\n    !Boolean(user) || Boolean(owner && owner !== user?.uid);\n\n  return (\n    <div style={{ display: hide ? 'none' : 'block', color: 'white' }}>\n      {permModalOpen && (\n        <PermanentRoomModal\n          closeModal={() => setPermModalOpen(false)}\n        ></PermanentRoomModal>\n      )}\n      <div className=\"sectionHeader\">Room Settings</div>\n      {!user && (\n        <Message color=\"yellow\" size=\"tiny\">\n          You need to be signed in to change these settings.\n        </Message>\n      )}\n      <SettingRow\n        icon={roomLock ? 'lock' : 'lock open'}\n        name={`Lock Room`}\n        description=\"Only the person who locked the room can control the video.\"\n        checked={Boolean(roomLock)}\n        disabled={lockDisabled}\n        onChange={(_e, data) => setRoomLock(data.checked)}\n      />\n      {\n        <SettingRow\n          icon={'clock'}\n          name={`Make Room Permanent`}\n          description={\n            'Prevent this room from expiring. This also unlocks additional room features.'\n          }\n          helpIcon={\n            <Icon\n              name=\"help circle\"\n              onClick={() => setPermModalOpen(true)}\n              style={{ cursor: 'pointer' }}\n            ></Icon>\n          }\n          checked={Boolean(owner)}\n          disabled={permanentDisabled}\n          onChange={(_e, data) => setRoomOwner({ undo: !data.checked })}\n        />\n      }\n      {owner && owner === user?.uid && (\n        <div className=\"sectionHeader\">Admin Settings</div>\n      )}\n      {owner && owner === user?.uid && (\n        <SettingRow\n          icon={'key'}\n          name={`Set Room Password`}\n          description=\"Users must know this password in order to join the room.\"\n          content={\n            <Input\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              fluid\n            />\n          }\n          disabled={false}\n        />\n      )}\n      {owner && owner === user?.uid && (\n        <SettingRow\n          icon={'i cursor'}\n          name={`Disable Chat`}\n          description=\"Prevent users from sending messages in chat.\"\n          checked={Boolean(isChatDisabled)}\n          disabled={false}\n          onChange={(_e, data) => setIsChatDisabled(Boolean(data.checked))}\n        />\n      )}\n      {owner && owner === user?.uid && (\n        <SettingRow\n          icon={'linkify'}\n          name={`Set Custom Room URL`}\n          description=\"Set a custom URL for this room. Inappropriate names may be revoked.\"\n          checked={Boolean(roomLock)}\n          disabled={!isSubscriber}\n          subOnly={true}\n          content={\n            <React.Fragment>\n              <Input\n                value={vanity}\n                disabled={!isSubscriber}\n                onChange={(e) => {\n                  checkValidVanity(e.target.value);\n                  setVanity(e.target.value);\n                }}\n                label={<Label>{`${window.location.origin}/r/`}</Label>}\n                loading={validVanityLoading}\n                fluid\n                size=\"mini\"\n                icon\n                action={\n                  validVanity ? (\n                    <Icon name=\"checkmark\" color=\"green\" />\n                  ) : (\n                    <Icon name=\"close\" color=\"red\" />\n                  )\n                }\n              ></Input>\n              <Button\n                size=\"mini\"\n                fluid\n                icon\n                labelPosition=\"left\"\n                color=\"orange\"\n                title=\"Copy link to clipboard\"\n                onClick={() => {\n                  navigator.clipboard.writeText(roomLink);\n                }}\n              >\n                <Icon name=\"copy\" />\n                {roomLink}\n              </Button>\n              <p />\n            </React.Fragment>\n          }\n        />\n      )}\n      <p />\n      {owner && owner === user?.uid && (\n        <Button\n          primary\n          disabled={!validVanity}\n          labelPosition=\"left\"\n          icon\n          fluid\n          onClick={() =>\n            setRoomState({\n              vanity: vanity,\n              password: password,\n              isChatDisabled: isChatDisabled,\n            })\n          }\n        >\n          <Icon name=\"save\" />\n          Save Admin Settings\n        </Button>\n      )}\n      {/* MEDIA_PATH */}\n      <div className=\"sectionHeader\">Local Settings</div>\n      <SettingRow\n        updateTS={updateTS}\n        icon=\"bell\"\n        name=\"Disable chat notification sound\"\n        description=\"Don't play a sound when a chat message is sent while you're on another tab\"\n        checked={Boolean(getCurrentSettings().disableChatSound)}\n        disabled={false}\n        onChange={(_e, data) => {\n          updateSettings(\n            JSON.stringify({\n              ...getCurrentSettings(),\n              disableChatSound: data.checked,\n            })\n          );\n          setUpdateTS(Number(new Date()));\n        }}\n      />\n    </div>\n  );\n};\n\nconst SettingRow = ({\n  icon,\n  name,\n  description,\n  checked,\n  disabled,\n  onChange,\n  content,\n  subOnly,\n  helpIcon,\n}: {\n  icon: string;\n  name: string;\n  description?: React.ReactNode;\n  checked?: boolean;\n  disabled: boolean;\n  updateTS?: number;\n  onChange?: (e: React.FormEvent, data: CheckboxProps) => void;\n  content?: React.ReactNode;\n  subOnly?: boolean;\n  helpIcon?: React.ReactNode;\n}) => {\n  return (\n    <React.Fragment>\n      <Divider inverted horizontal />\n      <div>\n        <div style={{ display: 'flex' }}>\n          <Icon size=\"large\" name={icon as any} />\n          <div>\n            {name} {helpIcon}\n            {subOnly ? (\n              <Label size=\"mini\" color=\"orange\">\n                Subscriber only\n              </Label>\n            ) : null}\n          </div>\n          {!content && (\n            <Radio\n              style={{ marginLeft: 'auto' }}\n              toggle\n              checked={checked}\n              disabled={disabled}\n              onChange={onChange}\n            />\n          )}\n        </div>\n        <div className=\"smallText\">{description}</div>\n        {content}\n      </div>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}